#!/usr/bin/env bash
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this script in the directory that contains vendor/ directory of a Go
# repository. It cleans up subpackages unused in vendor/.
set -eo pipefail
IFS=$'\n'

[[ -n "$GOPATH" ]] || ( echo >&2 "error: \$GOPATH not set"; exit 1)
[[ ! -d 'vendor/' ]] && ( echo >&2 "error: there's no vendor/ here"; exit 1)
if [[ -z "$GEESE" ]]; then
    GEESE="linux,darwin"
    echo >&2 "\$GEESE not set. assuming: $GEESE"
fi

# list of deps, in the form 'vendor/example.com/pkg/subpkg'
get_deps() {
	IFS=',' read -r -a goos_list <<< "$1"
	(
		for goos in "${goos_list[@]}"; do
			echo >&2 "Finding dependencies for GOOS=${goos}"
			env GOOS="${goos}" go list -f '{{join .Deps "\n"}}' ./... | \
				grep -Eo 'vendor/.*' | \
					# https://github.com/golang/go/issues/25592
					sed 's,golang_org/x/,golang.org/x/,'
		done
	) | sed 's/$/\//' | sort | uniq
}

# list of vendor dirs, in the form 'vendor/example.com/pkg/subpkg'
get_dirs() {
	find 'vendor/' -mindepth 1 -type d | sed 's/$/\//' | sort
}

# omit subdirectories from the output if their parent directory appears in the
# output
filter_subdirs() {
	awk '{if(k!="" && index($0,k)==1)next;k=$0}1'
}

find_unused_dirs() {
	local deps
	deps="$(get_deps "${GEESE}")"
	while read -r dir; do
		re=[^\b]*${dir}
		if [[ ! "$deps" =~ $re ]]; then
			echo "${dir}"
		fi
	done < <(get_dirs)
}

mapfile -t unused < <(find_unused_dirs)
echo "${unused[*]}"
echo >&2 "-----------"
read -p "Delete ${#unused[@]} directories listed above (y/N)? " -r
echo >&2
if [[ $REPLY =~ ^[Yy]$ ]]; then
	for dd in "${unused[@]}"; do
		(
			set -x; rm -rf -- "./${dd}"
		)
	done
fi
