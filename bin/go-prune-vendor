#!/usr/bin/env bash
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Run this script in the directory that contains vendor/ directory of a Go
# repository. It cleans up subpackages unused in vendor/.
set -euo pipefail
IFS=$'\n'

[[ ! -d 'vendor/' ]] && ( echo >&2 "error: there's no vendor/ here"; exit 1)

# list of deps, in the form 'vendor/example.com/pkg/subpkg'
get_deps() {
	env GOOS="${1}" go list -f '{{join .Deps "\n"}}' ./... | \
		grep -Eo 'vendor/.*' | sort | uniq
}

# list of vendor dirs, in the form 'vendor/example.com/pkg/subpkg'
get_dirs() {
	find 'vendor/' -mindepth 1 -type d | sort
}

find_unused() {
	goos="${1}"
	echo >&2 "Finding unused dependencies for GOOS=${goos}"
	mapfile -t deps < <(get_deps "${goos}")
	mapfile -t dirs < <(get_dirs)

	for dir in "${dirs[@]}"; do
		if ! echo "${deps[*]}" | grep -qE "^${dir}(/.*)?\$"; then
			echo "${dir}"
		fi
	done
}

mapfile -t unused < <(cat <(find_unused linux) <(find_unused darwin) | sort | uniq)
echo "${unused[*]}"
echo >&2 "-----------"
read -p "Are you sure to delete ${#unused[@]} directories listed above (y/N)? " -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
	for dd in "${unused[@]}"; do
		(
			set -x; rm -rf -- "${dd}"
		)
	done
fi
